pipeline {
	agent {
		node {
			label 'master'
		}
	}

	parameters {
		extendedChoice bindings: '', description: '', groovyClasspath: '', groovyScriptFile: '/var/jenkins_home/workspace/socks-proxy-test/fetchingImage.groovy', multiSelectDelimiter: ',', name: 'Image', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_SINGLE_SELECT', visibleItemCount: 20
	}

	environment {
		BUILD_NUMBER = ''
		PORT = "9150"
	}

	stages {
		stage('Build a docker image') {
			steps {
				sh """
					docker login -u avzini -p TUMrWrD9VNyHTah
					docker pull ${params.Image}
                    """
			}
		}
		stage('Build & Run tor-socks-proxy image') {
			steps {
				sh """
					docker build -t tor-socks-proxy .
					docker run -d --name tor-socks-proxy -p 127.0.0.1:$PORT:9150 ${params.Image}
                    """
			}
		}
		stage('Build & Run ping image') {
			steps {
				sh """
					docker build --build-arg PORT=$PORT -t ping_tor -f Dockerfile_PingTor .
					run --rm --net host ping_tor:latest --port $PORT
                    """
			}
		}
	}
}
