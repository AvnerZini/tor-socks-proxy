pipeline {
	agent {
		node {
			label 'master'
		}
	}

	parameters {
		extendedChoice bindings: '', description: '', groovyClasspath: '', groovyScriptFile: '/var/jenkins_home/workspace/socks-proxy-test/fetchingImage.groovy', multiSelectDelimiter: ',', name: 'Image', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_SINGLE_SELECT', visibleItemCount: 10
	}
			 stages {
				 stage('Build a docker image') {
					 steps {
						 sh """
					echo "${params.Image}"
                    """
					 }
				 }
			 }

//	post {
//		success{
//			echo "======== Trigger Jenkinsfile.Test ========"
//			script{
//				build job: 'job name', parameters: [string(name: 'image_name', value: "avzini/tor-socks-proxy:${env.BUILD_NUMBER}")]
//			}
//		}
//		cleanup {
//			cleanWs()
//		}
//	}
}

