pipeline {
	agent {
		node {
			label 'master'
		}
	}

	parameters {
		string(defaultValue: '9150', description: 'PORT', name: 'PORT')
		extendedChoice(bindings: '', description: '', groovyClasspath: '', groovyScriptFile: '/var/jenkins_home/workspace/socks-proxy-test/fetchingImage.groovy', multiSelectDelimiter: ',', name: 'Image', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_SINGLE_SELECT', visibleItemCount: 20)
	}

	stages {
		stage('Build a docker image') {
			steps {
				sh """
					docker login -u avzini -p TUMrWrD9VNyHTah
					docker pull avzini/tor-socks-proxy:${params.Image}
                    """
			}
		}
		stage('Build & Run tor-socks-proxy image') {
			steps {
				sh """
					docker build -t tor-socks-proxy .
					docker rm tor-socks-proxy-${params.PORT} || true
					docker run -d --name tor-socks-proxy-${params.PORT} -p 127.0.0.1:${params.PORT}:9150 avzini/tor-socks-proxy:${params.Image}
                    """
			}
		}
		stage('Build & Run ping image') {
			steps {
				sh """
					docker build -t ping_tor -f Dockerfile_PingTor .
					docker run --rm --net host ping_tor:latest --port ${params.PORT}
                    """
			}
		}
	}
}
